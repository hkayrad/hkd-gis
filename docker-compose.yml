services:
  auth_database:
    image: postgres:17
    container_name: auth_database
    ports:
      - "6000:5432"
    environment:
      - POSTGRES_DB=${AUTH_DB_NAME}
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASS}
    volumes:
      - auth_data:/var/lib/postgresql/data
    networks:
      - gis_db_connection
    restart: unless-stopped

  buildings_database:
    image: postgis/postgis:17-master
    container_name: buildings_database
    ports:
      - "6001:5432"
    environment:
      - POSTGRES_DB=${BUILDINGS_DB_NAME}
      - POSTGRES_USER=${BUILDINGS_DB_USER}
      - POSTGRES_PASSWORD=${BUILDINGS_DB_PASS}
    volumes:
      - buildings_data:/var/lib/postgresql/data
    networks:
      - gis_db_connection
    restart: unless-stopped

  poi_database:
    image: postgis/postgis:17-master
    container_name: poi_database
    ports:
      - "6002:5432"
    environment:
      - POSTGRES_DB=${POI_DB_NAME}
      - POSTGRES_USER=${POI_DB_USER}
      - POSTGRES_PASSWORD=${POI_DB_PASS}
    volumes:
      - poi_data:/var/lib/postgresql/data
    networks:
      - gis_db_connection
    restart: unless-stopped

  api_gateway:
    image: caddy_gateway:latest
    container_name: api_gateway
    networks:
      - api_gateway_network
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - buildings_service
    volumes:
      - ./CaddyGateway/Caddyfile:/etc/caddy/Caddyfile
    restart: unless-stopped
    # build:
    #   context: .
    #   dockerfile: ApiGateway/Dockerfile
    # container_name: api_gateway
    # ports:
    #   - "80:8080"
    # environment:
    #   - ASPNETCORE_ENVIRONMENT=Development
    # depends_on:
    #   - buildings_service
    # networks:
    #   - api_gateway_network
    # restart: unless-stopped

  buildings_service:
    build:
      context: .
      dockerfile: Services/BuildingsService/Dockerfile
    container_name: buildings_service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - BUILDINGS_POSTGRESQL_CONNECTION_STRING=Host=buildings_database;Database=${BUILDINGS_DB_NAME};Username=${BUILDINGS_DB_USER};Password=${BUILDINGS_DB_PASS}
    depends_on:
      - buildings_database
    networks:
      - gis_db_connection
      - api_gateway_network
    ports:
      - "5001:8080"
    restart: unless-stopped

networks:
  gis_db_connection:
    driver: bridge
  api_gateway_network:
    driver: bridge

volumes:
  buildings_data:
  poi_data:
  auth_data: